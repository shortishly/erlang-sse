#!/usr/bin/env escript
%% -*- erlang -*-

main(Arguments) ->
    Parameters = parameters(Arguments),
    case check(Parameters) of
	true ->
	    application:start(inets),
	    push(Parameters);
	_ ->
	    usage()
    end.

parameters(Parameters) ->
    parameters(Parameters, []).

parameters([[$-, $- | Option], Value | T], Parameters) ->
    parameters(T, [{Option, Value} | Parameters]);
parameters([], P) ->
    P;
parameters(_, _) ->
    usage().

check(Parameters) ->
    lists:foldl(fun(Parameter, A) ->
			A andalso proplists:is_defined(Parameter, Parameters)
		end, true, ["data", "event", "topic"]).

usage() ->
    io:format("Usage: ~s --topic topic --event event --data data~n", [escript:script_name()]),
    halt(1).
    

push(Parameters) ->
    io:format("~p~n", [httpc:request(post,
				     {"http://localhost:8181/events",
				      [],
				      "application/x-www-form-urlencoded",
				      encode(Parameters)
				     }, [], [])]).

encode(Parameters) ->
    lists:flatten(string:join(lists:map(fun({Key, Value}) ->
						[Key ++ "=" ++ Value]
			  end, Parameters), "&")).

    




